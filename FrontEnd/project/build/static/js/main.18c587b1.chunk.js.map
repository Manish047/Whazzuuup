{"version":3,"sources":["components/Chat/Chat.js","components/JoinRoom/JoinRoom.js","components/InfoBar/InfoBar.js","components/Input/Input.js","components/Messages/Message/Message.js","components/Messages/Messages.js","App.js","index.js","components/JoinRoom/JoinRoom.module.css","components/InfoBar/InfoBar.module.css","components/Input/Input.module.css","components/Chat/Chat.module.css","components/Messages/Messages.module.css","components/Messages/Message/Message.module.css"],"names":["socket","JoinRoom","props","useState","name","setName","room","setRoom","className","classes","Content","Heading","Seperator","placeholder","Input","type","onChange","event","target","value","Button","onClick","e","preventDefault","to","InfoBar","Logo","aria-hidden","Title","Users","users","map","user","index","length","id","CloseButton","endSession","React","memo","Form","message","setMessage","onKeyPress","key","sendMessage","SendButton","Message","text","isSentByCurrentUser","trimmedName","trim","toLowerCase","UserMessage","join","UserName","UserMessageBox","UserMessageText","ReactEmoji","emojify","RecievedMessage","RecievedMessageBox","RecievedMessageText","RecievedUserName","AdminMessage","Messages","messages","i","Chat","setUsers","setMessages","ENDPOINT","useEffect","queryString","parse","location","search","io","transports","emit","error","history","replace","alert","off","on","prevMessages","msg","App","exact","path","component","render","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.18c587b1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport queryString from 'query-string';\r\nimport classes from './Chat.module.css';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\nimport Messages from '../Messages/Messages';\r\n\r\nlet socket;\r\n\r\nconst Chat = props => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const ENDPOINT = 'https://chat-47.herokuapp.com/';\r\n    // const ENDPOINT = 'http://localhost:5000/';\r\n\r\n    // Runs everytime component renders\r\n    useEffect(() => {\r\n        const { name, room } = queryString.parse(props.location.search);\r\n        socket = io(ENDPOINT, { transports: ['websocket'] });\r\n        setName(name);\r\n        setRoom(room);\r\n        socket.emit('join', { name: name, room: room }, error => {\r\n            if (error) {\r\n                props.history.replace('/');\r\n                alert(error);\r\n            }\r\n        });\r\n        // Unmounting\r\n        return () => {\r\n            socket.emit('endSession');\r\n            socket.off('join');\r\n            socket.off('endSession');\r\n        }\r\n    }, [ENDPOINT, props.location.search, props.history]);\r\n\r\n    // Listening for events fired by server\r\n    useEffect(() => {\r\n        socket.on('message', message => {\r\n            setMessages(prevMessages => [...prevMessages, message]);\r\n        })\r\n        socket.on('roomData', ({ users }) => {\r\n            setUsers(users);\r\n        })\r\n        // Unmounting\r\n        return () => {\r\n            socket.emit('endSession');\r\n            socket.off('join');\r\n            socket.off('message');\r\n            socket.off('roomData');\r\n            socket.off('endSession');\r\n        }\r\n    }, []);\r\n\r\n    // Function for sending messages\r\n    const sendMessage = (event) => {\r\n        event.preventDefault();\r\n        if (message) {\r\n            const msg = message;\r\n            setMessage('');\r\n            socket.emit('sendMessage', { message: msg }, error => {\r\n                if (error) {\r\n                    props.history.replace('/');\r\n                    alert(error);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // To terminate the session\r\n    const endSession = () => {\r\n        socket.emit('endSession');\r\n        props.history.replace('/');\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Chat}>\r\n            <div className={classes.Content}>\r\n                <InfoBar room={room} users={users} endSession={endSession} />\r\n                <Messages messages={messages} name={name} />\r\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './JoinRoom.module.css';\r\n\r\nconst JoinRoom = props => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n\r\n    return (\r\n        <div className={classes.JoinRoom}>\r\n            <div className={classes.Content}>\r\n                <h1 className={classes.Heading}>Create a Chat Room</h1>\r\n                <hr className={classes.Seperator}></hr>\r\n                <input placeholder=\"Name\" className={classes.Input} type=\"text\" onChange={(event) => setName(event.target.value)} />\r\n                <input placeholder=\"Room\" className={classes.Input} type=\"text\" onChange={(event) => setRoom(event.target.value)} />\r\n                <Link className={classes.Button} onClick={e => (!name || !room) ? e.preventDefault() : null} to={`/chat?name=${name}&room=${room}`}>\r\n                    Sign In\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JoinRoom;","import React from 'react';\r\nimport classes from './InfoBar.module.css';\r\n\r\nconst InfoBar = props => {\r\n    return (\r\n        <div className={classes.InfoBar}>\r\n            <div className={classes.Logo}>\r\n            <i className=\"fa fa-whatsapp\" aria-hidden=\"false\"></i>\r\n            </div>\r\n            <div className={classes.Title}>\r\n                <p className={classes.Heading}>{props.room}</p>\r\n                <div className={classes.Users}>\r\n                    {props.users.map((user, index) => {\r\n                        return <span key={user.id}>\r\n                            {user.name + (index === props.users.length - 1 ? '' : ', ')}\r\n                        </span>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <button className={classes.CloseButton} onClick={props.endSession}>\r\n                Logout\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(InfoBar);","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst Input = props => {\r\n    return (\r\n        <form className={classes.Form}>\r\n            <input\r\n                type=\"text\"\r\n                value={props.message}\r\n                placeholder=\"Type a message...\"\r\n                className={classes.Input}\r\n                onChange={event => props.setMessage(event.target.value)}\r\n                onKeyPress={event => event.key === 'Enter' ? props.sendMessage : null}\r\n            />\r\n            <button className={classes.SendButton} onClick={props.sendMessage}>\r\n                <i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default React.memo(Input);","import React from 'react';\r\n\r\nimport classes from './Message.module.css';\r\n\r\nimport ReactEmoji from 'react-emoji';\r\n\r\nconst Message = ({ message: { text, user }, name }) => {\r\n\r\n  let isSentByCurrentUser = false;\r\n\r\n  const trimmedName = name.trim().toLowerCase();\r\n\r\n  if (user === trimmedName) {\r\n    isSentByCurrentUser = true;\r\n  }\r\n\r\n  let message = (\r\n    isSentByCurrentUser\r\n      ? (\r\n        <div className={[classes.UserMessage].join(' ')}>\r\n          <p className={classes.UserName}>{trimmedName}</p>\r\n          <div className={classes.UserMessageBox}>\r\n            <p className={classes.UserMessageText}>{ReactEmoji.emojify(text)}</p>\r\n          </div>\r\n        </div>\r\n      )\r\n      : (\r\n        <div className={[classes.RecievedMessage].join(' ')}>\r\n          <div className={classes.RecievedMessageBox}>\r\n            <p className={classes.RecievedMessageText}>{ReactEmoji.emojify(text)}</p>\r\n          </div>\r\n          <p className={classes.RecievedUserName}>{user}</p>\r\n        </div>\r\n      )\r\n  );\r\n\r\n  if (user === 'admin') {\r\n    message = <div className={classes.AdminMessage}>{text}</div>\r\n  }\r\n\r\n  return message;\r\n}\r\n\r\nexport default React.memo(Message);","import React from 'react';\r\nimport classes from './Messages.module.css';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport Message from './Message/Message';\r\n\r\nconst Messages = ({ messages, name }) => {\r\n  return (\r\n    <ScrollToBottom className={classes.Messages}>\r\n      {messages.map((message, i) => <div key={i}><Message message={message} name={name} /></div>)}\r\n    </ScrollToBottom>\r\n  );\r\n}\r\n\r\nexport default React.memo(Messages);","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport JoinRoom from './components/JoinRoom/JoinRoom';\nimport Chat from './components/Chat/Chat';\n\nconst App = props => {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={JoinRoom} />\n          <Route exact path=\"/chat\" component={Chat} />\n          <Route path=\"/\" render={() => <h1>404: Page Not Found</h1>} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />\n  , document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"JoinRoom\":\"JoinRoom_JoinRoom__2uGUU\",\"Content\":\"JoinRoom_Content__xO69a\",\"Heading\":\"JoinRoom_Heading__35B0c\",\"Seperator\":\"JoinRoom_Seperator__2zhgH\",\"Input\":\"JoinRoom_Input__30you\",\"Button\":\"JoinRoom_Button__O6cif\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InfoBar\":\"InfoBar_InfoBar__31QZK\",\"Logo\":\"InfoBar_Logo__V_GKf\",\"Title\":\"InfoBar_Title__3_1EQ\",\"Users\":\"InfoBar_Users__1SFa5\",\"CloseButton\":\"InfoBar_CloseButton__11niu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Input_Form__V1UDW\",\"Input\":\"Input_Input__2GZBH\",\"SendButton\":\"Input_SendButton__1n_RU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chat\":\"Chat_Chat__3lBEg\",\"Content\":\"Chat_Content__jjqvs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__1sdSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminMessage\":\"Message_AdminMessage__2eJjC\",\"UserMessage\":\"Message_UserMessage__1_EZl\",\"RecievedMessage\":\"Message_RecievedMessage__2hn8x\",\"UserMessageBox\":\"Message_UserMessageBox__3YLQE\",\"RecievedMessageBox\":\"Message_RecievedMessageBox__18R6r\",\"UserName\":\"Message_UserName__3Unt3\",\"RecievedUserName\":\"Message_RecievedUserName__2yavy\",\"UserMessageText\":\"Message_UserMessageText__3rH1W\",\"RecievedMessageText\":\"Message_RecievedMessageText__1gPWV\"};"],"sourceRoot":""}